#!/usr/bin/env node
const { existsSync } = require('fs');
const { join } = require('path')

var rsCliPath = join(__dirname, "inspect-cli-rs");

var legacyCli = process.argv.indexOf('--legacy') >= 0;
var rsCliExists = existsSync(rsCliPath);

if (legacyCli || !rsCliExists) {
  legacyRun();
} else {
  run();
}

function legacyRun() {
  var devMode = require('fs').existsSync(`${__dirname}/../src`)
  var wantsCompiled = process.argv.indexOf('--compiled-build') >= 0

  if (wantsCompiled || !devMode) {
    require(`${__dirname}/../build/cli`).run(process.argv)
  } else {
    require('ts-node').register({ project: `${__dirname}/../tsconfig.json` })
    require(`${__dirname}/../src/cli`).run(process.argv)
  }
}

function run() {
  const { spawn } = require('child_process');
  
  const rustBinary = spawn(rsCliPath, process.argv.slice(2));
  
  rustBinary.stdout.pipe(process.stdout);
  rustBinary.stderr.pipe(process.stderr);

  rustBinary.on('error', (err) => {
    console.error('Internal error; consider running with --legacy flag')

    console.error(err)
  });

  rustBinary.on('close', process.exit);
}
